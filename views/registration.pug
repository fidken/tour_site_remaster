extends layout

block content
    h1 Регистрация

    form#registrationForm(action='/profile-registration', method='POST', enctype='multipart/form-data')
        label(for='firstName') Имя:
        input#firstName(type='text', name='firstName', placeholder='Введите своё имя', required)
        
        label(for='lastName') Фамилия:
        input#lastName(type='text', name='lastName', placeholder='Введите фамилию', required)
        
        label(for='email') Email:
        input#email(type='email', name='email', placeholder='Введите почту', required)
        
        label(for='phone') Номер телефона:
        input#phone(type='tel', name='phone', placeholder='+7 (___) ___-__-__', required)
        
        label(for='password') Пароль:
        input#password(type='password', name='password', placeholder='Введите пароль', required)
        
        label(for='avatar') Аватар:
        input#avatar(type='file', name='avatar', accept='image/*')
        
        button(type='submit') Зарегистрироваться


    p Уже есть аккаунт?
        a(href='/login') Войти

    script.
            function showPopupNotification(message, type) {
                const notification = document.createElement('div');
                notification.className = `popup-notification ${type}`;
                notification.textContent = message;
                document.body.appendChild(notification);
                setTimeout(() => {
                    notification.style.opacity = '1';
                    notification.style.transform = 'translateY(0)';
                }, 10);
                setTimeout(() => {
                    notification.style.opacity = '0';
                    notification.style.transform = 'translateY(20px)';
                    setTimeout(() => {
                        notification.remove();
                    }, 300);
                }, 3000);
            }

            function editField(field) {
                const currentValue = document.getElementById(`user${field.charAt(0).toUpperCase() + field.slice(1)}`).value;
                const newValue = prompt(`Редактировать ${field}`, currentValue);
                if (newValue !== null && newValue.trim() !== "") {
                    document.getElementById(`user${field.charAt(0).toUpperCase() + field.slice(1)}`).value = newValue;
                    showPopupNotification(`${field.charAt(0).toUpperCase() + field.slice(1)} успешно обновлено!`, 'success');
                }
            }

            function toggleOrderDetails(element) {
            var details = element.querySelector('.order-details');
            if (details) {
                details.classList.toggle('hidden'); // Переключаем класс hidden, чтобы скрыть/показать детали
            }
            }
            document.addEventListener('DOMContentLoaded', function() {
            const phoneInput = document.getElementById('phone');

            // Функция для форматирования номера телефона при загрузке страницы
            function formatPhoneOnLoad(phone) {
                    const match = phone.match(/^(\+\d{1,4})(\d{10})$/);
                    if (match) {
                        const countryCode = match[1];
                        const mainNumber = match[2];
                        return `${countryCode} (${mainNumber.slice(0, 3)}) ${mainNumber.slice(3, 6)}-${mainNumber.slice(6)}`;
                    }
                    return phone;
                }

                // Форматируем номер телефона при загрузке страницы
                phoneInput.value = formatPhoneOnLoad(phoneInput.value);

                // Функция для форматирования ввода номера телефона
                phoneInput.addEventListener('keydown', function(e) {
            let cursorPosition = phoneInput.selectionStart;

                // Проверяем, если нажат Backspace и курсор стоит перед символом форматирования
                if (e.key === 'Backspace' && cursorPosition > 0) {
                    const value = phoneInput.value;
                    if (value[cursorPosition - 1].match(/[\s\-\(\)]/)) {
                        e.preventDefault();
                        phoneInput.value = value.slice(0, cursorPosition - 1) + value.slice(cursorPosition);
                        phoneInput.setSelectionRange(cursorPosition - 1, cursorPosition - 1);
                    }
                }
            });

            phoneInput.addEventListener('input', function(e) {
                let value = phoneInput.value.replace(/\D/g, ''); // Удаляем все нецифровые символы
                let cursorPosition = phoneInput.selectionStart; // Запоминаем текущую позицию курсора
                let was7or8 = false;

                if (value.startsWith('7') || value.startsWith('8')) {
                    value = '7' + value.slice(1);
                    was7or8 = true;
                } else if (value.length > 10 && !value.startsWith('+')) {
                    value = '+' + value;
                }

                if (value.length > 11) {
                    value = value.slice(0, 11); // Ограничиваем длину до 11 символов
                }

                let formattedValue = '';
                if (value.length > 6) {
                    formattedValue = '+7 (' + value.slice(1, 4) + ') ' + value.slice(4, 7) + '-' + value.slice(7);
                } else if (value.length > 3) {
                    formattedValue = '+7 (' + value.slice(1, 4) + ') ' + value.slice(4);
                } else if (value.length > 1) {
                    formattedValue = '+7 (' + value.slice(1);
                } else if (value.length > 0) {
                    formattedValue = '+7';
                }

                phoneInput.value = formattedValue;

                // Восстанавливаем позицию курсора
                if (was7or8) {
                    phoneInput.setSelectionRange(phoneInput.value.length, phoneInput.value.length);
                } else {
                    phoneInput.setSelectionRange(cursorPosition, cursorPosition);
                }
            });



            });


